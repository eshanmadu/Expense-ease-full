{"ast":null,"code":"// Resolve API base URL for both Vite and CRA/webpack builds\n// - Vite: import.meta.env.VITE_API_URL\n// - CRA: process.env.REACT_APP_API_URL or process.env.VITE_API_URL (if configured)\nconst viteEnv = typeof import.meta !== 'undefined' && import.meta && import.meta.env ? import.meta.env : undefined;\nconst webpackEnv = typeof process !== 'undefined' && process && process.env ? process.env : undefined;\nconst API_BASE_URL = viteEnv && viteEnv.VITE_API_URL || webpackEnv && (webpackEnv.REACT_APP_API_URL || webpackEnv.VITE_API_URL) || '';\nexport async function apiFetch(path, options = {}) {\n  const url = path.startsWith('http') ? path : `${API_BASE_URL}${path}`;\n  const defaultHeaders = {\n    'Content-Type': 'application/json'\n  };\n  const headers = {\n    ...defaultHeaders,\n    ...(options.headers || {})\n  };\n  const res = await fetch(url, {\n    ...options,\n    headers\n  });\n  return res;\n}\nexport function getApiBaseUrl() {\n  return API_BASE_URL;\n}","map":{"version":3,"names":["viteEnv","import","meta","env","undefined","webpackEnv","process","API_BASE_URL","VITE_API_URL","REACT_APP_API_URL","apiFetch","path","options","url","startsWith","defaultHeaders","headers","res","fetch","getApiBaseUrl"],"sources":["C:/Users/Lap.lk/Expense-tracker/frontend/src/utils/api.js"],"sourcesContent":["// Resolve API base URL for both Vite and CRA/webpack builds\r\n// - Vite: import.meta.env.VITE_API_URL\r\n// - CRA: process.env.REACT_APP_API_URL or process.env.VITE_API_URL (if configured)\r\nconst viteEnv = (typeof import.meta !== 'undefined' && import.meta && import.meta.env) ? import.meta.env : undefined;\r\nconst webpackEnv = (typeof process !== 'undefined' && process && process.env) ? process.env : undefined;\r\n\r\nconst API_BASE_URL = (\r\n  (viteEnv && viteEnv.VITE_API_URL) ||\r\n  (webpackEnv && (webpackEnv.REACT_APP_API_URL || webpackEnv.VITE_API_URL)) ||\r\n  ''\r\n);\r\n\r\nexport async function apiFetch(path, options = {}) {\r\n  const url = path.startsWith('http') ? path : `${API_BASE_URL}${path}`;\r\n  const defaultHeaders = { 'Content-Type': 'application/json' };\r\n  const headers = { ...defaultHeaders, ...(options.headers || {}) };\r\n  const res = await fetch(url, { ...options, headers });\r\n  return res;\r\n}\r\n\r\nexport function getApiBaseUrl() {\r\n  return API_BASE_URL;\r\n}\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,OAAO,GAAI,OAAOC,MAAM,CAACC,IAAI,KAAK,WAAW,IAAID,MAAM,CAACC,IAAI,IAAID,MAAM,CAACC,IAAI,CAACC,GAAG,GAAIF,MAAM,CAACC,IAAI,CAACC,GAAG,GAAGC,SAAS;AACpH,MAAMC,UAAU,GAAI,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,IAAIA,OAAO,CAACH,GAAG,GAAIG,OAAO,CAACH,GAAG,GAAGC,SAAS;AAEvG,MAAMG,YAAY,GACfP,OAAO,IAAIA,OAAO,CAACQ,YAAY,IAC/BH,UAAU,KAAKA,UAAU,CAACI,iBAAiB,IAAIJ,UAAU,CAACG,YAAY,CAAE,IACzE,EACD;AAED,OAAO,eAAeE,QAAQA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD,MAAMC,GAAG,GAAGF,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,GAAGH,IAAI,GAAG,GAAGJ,YAAY,GAAGI,IAAI,EAAE;EACrE,MAAMI,cAAc,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC7D,MAAMC,OAAO,GAAG;IAAE,GAAGD,cAAc;IAAE,IAAIH,OAAO,CAACI,OAAO,IAAI,CAAC,CAAC;EAAE,CAAC;EACjE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IAAE,GAAGD,OAAO;IAAEI;EAAQ,CAAC,CAAC;EACrD,OAAOC,GAAG;AACZ;AAEA,OAAO,SAASE,aAAaA,CAAA,EAAG;EAC9B,OAAOZ,YAAY;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}